Введення в конкурентність та паралелізм
Перед тим, як почнемо розгляд теми, визначимося з термінами послідовна обробка, конкурентність і паралелізм.
Найлегше буде пояснити концепцію паралелізму (parallelism). У цьому випадку завдання виконуються насправді паралельно й одночасно.
Конкурентні (concurrent) завдання можуть виконуватися по-різному: паралельно або послідовно, залежно від мови програмування та операційної системи. Таким чином,
усі паралельні завдання є конкурентними, але не навпаки.
Термін послідовний (sequential) можна використовувати двояко. По-перше, він може говорити про те, що якась послідовність завдань має виконуватися у строго заданій послідовності.
Наприклад, щоб щось записати в комп'ютер, вам необхідно спочатку його увімкнути, при цьому порядок дій або їхня послідовність визначається самими діями. Друге завдання може бути 
виконане тільки після завершення першого.
Однак іноді слово “послідовний” вживається стосовно обмежень, що накладаються системою на виконання завдань. Наприклад, в один момент часу тільки одна людина може бути в кабінці для 
примірки в магазині одягу, навіть якщо чисто фізично місця там вистачило б і двом.
Нарешті, існує концепція витіснення (preemption), яка вступає в дію, коли одне завдання в примусовому порядку переривається для передання виконання іншому завданню. 
Це стосується політики розкладів завдань і вимагає наявності відповідного програмного або апаратного забезпечення, який називається планувальником (scheduler).
Альтернативою багатозадачності, що витісняє (preemptive multitasking), є кооперативна багатозадачність (cooperative multitasking): у цьому разі ваш код сам несе відповідальність 
за сповіщення системи про те, коли він може добровільно перерватися та передати керування іншому завданню. Погляньте на малюнок нижче, щоб краще зрозуміти ці концепції.